/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package automatedsequence;

import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ListSelectionModel;

/**
 *
 * @author brianho
 */
public class MainProgram extends javax.swing.JFrame {
    
    private MainClass MC = new MainClass();
    private Timer timer = new Timer();
    private RandomizeOCanada oCanada = new RandomizeOCanada();
    private ScheduledEvents events = new ScheduledEvents();
    private CalenderLOL calender = new CalenderLOL();
    String time;
    
    /**
     * Creates new form MainProgram
     */
    public MainProgram() {
        timer.readFile();
        timer.closeFile();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scheduleCommandButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        dateAndTimeLabel = new javax.swing.JLabel();
        overrideToggleButton = new javax.swing.JToggleButton();
        propertiesButton = new javax.swing.JButton();
        postponeToggleButton = new javax.swing.JToggleButton();
        jTextField1 = new javax.swing.JTextField();
        minutesLabel = new javax.swing.JLabel();
        scheduleHolidaysButton = new javax.swing.JButton();
        startNowButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        scheduledTasks = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        scheduledTasks1 = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Super Automator");
        setResizable(false);

        scheduleCommandButton.setText("Schedule Command");
        scheduleCommandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleCommandButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(1);
        jTextArea1.setRows(1);
        jTextArea1.setEditable(false); // cannot edit text being displayed
        jTextArea1.setText("[INFO] O'CANADA VERSION " + oCanada.getVersion() +" SELECTED");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Logger");

        jLabel2.setText("SCHEDULED TASKS");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("[8:15:00 - 8:20:00 AM] MORNING RUSH");
        jScrollPane3.setViewportView(jTextArea3);

        jLabel3.setText("COMPLETED");

        dateAndTimeLabel.setText(time);

        overrideToggleButton.setText("Override");
        overrideToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overrideToggleButtonActionPerformed(evt);
            }
        });

        propertiesButton.setText("Properties");
        propertiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                propertiesButtonActionPerformed(evt);
            }
        });

        postponeToggleButton.setText("Postpone");
        postponeToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postponeToggleButtonActionPerformed(evt);
            }
        });

        jTextField1.setText("5");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        minutesLabel.setText("Minutes");

        scheduleHolidaysButton.setText("Schedule Holidays");
        scheduleHolidaysButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleHolidaysButtonActionPerformed(evt);
            }
        });

        startNowButton.setText("START NOW");
        startNowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startNowButtonMouseReleased(evt);
            }
        });
        startNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNowButtonActionPerformed(evt);
            }
        });

        scheduledTasks.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        scheduledTasks.setModel(new javax.swing.AbstractListModel() {

            String[] strings = { "[" + timer.getTaskStartTime() + " - 8:21:30 AM] " + timer.getTaskName(), "yolo" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scheduledTasks.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                scheduledTasksValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(scheduledTasks);

        scheduledTasks.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        scheduledTasks1.setModel(new javax.swing.AbstractListModel() {

            String[] strings = { "[" + timer.getTaskStartTime() + " - 8:21:30 AM] " + timer.getTaskName(), "yolo" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scheduledTasks1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                scheduledTasks1ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(scheduledTasks1);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scheduleCommandButton)
                                .addGap(18, 18, 18)
                                .addComponent(propertiesButton))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(0, 515, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(overrideToggleButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(postponeToggleButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minutesLabel)
                                .addGap(51, 51, 51)
                                .addComponent(startNowButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(dateAndTimeLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scheduleHolidaysButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(overrideToggleButton)
                                    .addComponent(postponeToggleButton)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(minutesLabel)
                                    .addComponent(startNowButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(scheduleCommandButton)
                                    .addComponent(propertiesButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(scheduleHolidaysButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                .addComponent(dateAndTimeLabel)))
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        new Thread(){
            public void run(){

                while (true){
                    Calendar c= new GregorianCalendar();
                    String dayOfWeek = (calender.getDayOfWeek(c.get(Calendar.DAY_OF_WEEK)));
                    String month = (calender.getMonth(c.get(Calendar.MONTH) + 1)); // because starts at 0
                    int dayOfMonth = c.get(Calendar.DAY_OF_MONTH);
                    int year = c.get(Calendar.YEAR);
                    int hour = c.get(Calendar.HOUR);
                    int minute = c.get(Calendar.MINUTE);
                    int sec = c.get(Calendar.SECOND);
                    int ampm = c.get(Calendar.AM_PM);
                    time = dayOfWeek + " " + month + " " + dayOfMonth + " " + year + " [EDT " + hour +":" + ((minute < 10) ? "0" + minute : minute) + ":" + ((sec < 10) ? "0" + sec : sec) + (ampm == 1 ? " PM]" : " AM]") ;
                    dateAndTimeLabel.setText(time);
                    try {
                        Thread.sleep(1000); // loop once every second, reduces toll on cpu
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                }
            }
        }.start();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void overrideToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overrideToggleButtonActionPerformed
        do {
            MC.Stop();
        } while (MC.getPosition() > 1);
    }//GEN-LAST:event_overrideToggleButtonActionPerformed

    private void scheduleCommandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleCommandButtonActionPerformed
        CommandScheduler commandsGUI = new CommandScheduler(); // command gui object
        commandsGUI.setLocationRelativeTo(null); // centers window
        commandsGUI.setVisible(true); // make visible
    }//GEN-LAST:event_scheduleCommandButtonActionPerformed

    private void postponeToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postponeToggleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postponeToggleButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void propertiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_propertiesButtonActionPerformed
        Properties propertiesGUI = new Properties(); // properties gui object
        propertiesGUI.setLocationRelativeTo(null); // centers window
        propertiesGUI.setVisible(true); // make visible
    }//GEN-LAST:event_propertiesButtonActionPerformed

    private void startNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNowButtonActionPerformed
        if (scheduledTasks.getSelectedIndex() == events.getCurrentEvent()) {
            MC.Play("/Users/brianho/Music/Black.mp3");
        }
    }//GEN-LAST:event_startNowButtonActionPerformed

    private void startNowButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startNowButtonMouseReleased

    }//GEN-LAST:event_startNowButtonMouseReleased

    private void scheduleHolidaysButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleHolidaysButtonActionPerformed
        HolidayScheduler holidaysGUI = new HolidayScheduler(); // holiday gui object
        holidaysGUI.setLocationRelativeTo(null); // centers window
        holidaysGUI.setVisible(true); // make visible
    }//GEN-LAST:event_scheduleHolidaysButtonActionPerformed

    private void scheduledTasksValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_scheduledTasksValueChanged
        
    }//GEN-LAST:event_scheduledTasksValueChanged

    private void scheduledTasks1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_scheduledTasks1ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_scheduledTasks1ValueChanged
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateAndTimeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JToggleButton overrideToggleButton;
    private javax.swing.JToggleButton postponeToggleButton;
    private javax.swing.JButton propertiesButton;
    private javax.swing.JButton scheduleCommandButton;
    private javax.swing.JButton scheduleHolidaysButton;
    private javax.swing.JList scheduledTasks;
    private javax.swing.JList scheduledTasks1;
    private javax.swing.JButton startNowButton;
    // End of variables declaration//GEN-END:variables
}
